@font-face {
    font-family: 'Troubleside';
    src: url('/assets/fonts/Troubleside.woff2');
    font-display: swap;
}

:root {
    // filter: grayscale(1);
    --blur: 1ch;
    --t: 133.333334ms; //266.666667ms; //calc(1s / 60 * 16);
    --surface: hsl(203.44 8% 16%);
    --text: hsl(200 5% 80%);
    --dot-color: #000;
    --bg-1: var(--gl) 0px 0px / 4px 4px;
    --gl: radial-gradient(circle 1px at 0px 0px, var(--dot-color) 1px, transparent 0);
    color-scheme: light dark;
    background-color: var(--surface);
    color: var(--text);
    block-size: 100%;
    font-size: 16px;

    @media (prefers-color-scheme: light) {
        --surface: #f7fcff;
        --text: #010102;
    }
}

body {
    min-block-size: 100%;
    min-inline-size: 100%;
    margin: 0;
    font-family: system-ui, sans-serif;
    display: grid;
}

*,
*::after,
*::before {
    box-sizing: border-box;
    scrollbar-width: thin;
    scrollbar-color: var(--text) var(--surface);
}

input {
    --q: 1;

    user-select: none;
    border: 0;
    font: inherit;
    color: inherit;
    padding-inline: calc(var(--q) * 1ch);
    padding-block: calc(var(--q) * 1ch);
    border-radius: .5ch;
}

.button {
    --q: 1;

    user-select: none;
    border: 0;
    // border: 1px solid #5299ce;
    font: inherit;
    color: inherit;
    padding-inline: calc(var(--q) * 1ch);
    padding-block: calc(var(--q) * 1ch);
    border-radius: .5ch;
    cursor: pointer;
    background: hsl(203.44 8% 16%);

    @media (prefers-color-scheme: light) {
        background: hsl(203.44 8% 96%);
    }

    & {
        transition: all var(--t);
        text-wrap: balance;
        -webkit-tap-highlight-color: transparent;
        box-shadow: var(--flat-shadow-medium);
    }

    &.small {
        --q: 0.5
    }

    &.mediun {
        --q: 1.5
    }

    &.large {
        --q: 2
    }

    &.tshadow {
        text-shadow: 0 0 0.25ch #000a;
    }

    &.empty {
        background: transparent;
        box-shadow: unset;
    }

    &.primary {
        background: #166496;
        color: white;
    }



    &:hover {
        background-color: #103651;
        color: #ffd60a;

        @media (prefers-color-scheme: light) {
            background-color: #f8d755;
            color: #103651;
        }
    }

    &.delete {

        &:hover,
        &:focus {
            background-color: #541f20;
        }
    }

    &:active {
        background-color: rgba(0, 15, 30, 1);
        box-shadow: unset;
        transform: translate(2px, 2px);
    }

    &.full {
        width: 100%;
    }

    &:disabled {
        cursor: not-allowed;
        // pointer-events: none;
        filter: grayscale(.64);
        box-shadow: unset;
        background-color: rgba(0, 15, 30, .5);

        @media (prefers-color-scheme: light) {
            background-color: rgba(0, 15, 30, .25);
            opacity: .64;
        }
    }
}

a {
    color: #4081b1;
    text-decoration: none;
    transition: all var(--t) ease-in-out;

    &:hover {
        color: #ffd60a;

        @media (prefers-color-scheme: light) {
            color: #caa902
        }

    }
}

a[target="_blank"]:after {
    content: " \2197";
    font-size: 0.8em;
    opacity: .8;
    vertical-align: super;
}

:root {
    --shc: #ffd60a; //rgb(0, 39, 65);
    --avarage-l: 0.48;
    --avarage-l-2: 0.36;

    @media (prefers-color-scheme: light) {
        --shc: #166496;
    }

    & {
        --shadow-color: oklch(from var(--shc) var(--avarage-l-2) c h);
        --shadow-distance: .25rem;
        --shadow-distance-2: .5rem;

        // --flat-shadow-high: 1px 1px var(--shc),
        //     2px 2px var(--shc),
        //     3px 3px 0 -1px var(--shc),
        //     4px 4px 0 -1px var(--shc);

        // --flat-shadow-medium: 1px 1px var(--shc),
        //     2px 2px var(--shc);

        --flat-shadow-medium: 1px 1px var(--surface), var(--shadow-distance) var(--shadow-distance) var(--shadow-color);
        --flat-shadow-high: 1px 1px var(--surface), var(--shadow-distance-2) var(--shadow-distance-2) var(--shadow-color);
    }
}

@supports (transition-behavior: allow-discrete) {

    dialog,
    dialog::backdrop {
        transition-property: opacity, transform, overlay, display, filter;
        transition-duration: var(--t);
        transition-behavior: allow-discrete;
        opacity: 0;
        transform: scale(calc(1 + var(--scale-diff-x, .1)), calc(1 + var(--scale-diff-y, .1)));
        filter: blur(var(--blur));
    }

    dialog[open],
    dialog[open]::backdrop {
        opacity: 1;
        transform: scale(1);
        filter: blur(0);
    }

    @starting-style {

        dialog[open],
        dialog[open]::backdrop {
            opacity: 0;
            transform: scale(calc(1 + var(--scale-diff-x, .1)), calc(1 + var(--scale-diff-y, .1)));
            filter: blur(var(--blur));
        }
    }
}